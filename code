Index

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Book Library</title>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <header>
    <h1>Welcome to the Book Library</h1>
    <nav>
      <a href="index.html">Home</a>
      <a href="fiction.html">Fiction</a>
      <a href="non-fiction.html">Non-Fiction</a>
      <a href="borrowing.html">Borrowing History</a>
    </nav>
  </header>
  <main>
    <section id="search">
      <input type="text" id="searchBox" placeholder="Search for books by title or author...">
    </section>
    <section id="bookList">
      
    </section>
  </main>
  <script src="script.js"></script>
</body>
</html>

borrowing

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Borrowing History</title>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <header>
    <h1>Borrowing History</h1>
    <nav>
      <a href="index.html">Home</a>
      <a href="fiction.html">Fiction</a>
      <a href="non-fiction.html">Non-Fiction</a>
    </nav>
  </header>
  <main id="historyList">
    
  </main>
  <script src="script.js"></script>
</body>
</html>

non-fiction

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Fiction Books</title>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <header>
    <h1>Non-Fiction Books</h1>
    <nav>
      <a href="index.html">Home</a>
      <a href="non-fiction.html">Non-Fiction</a>
      <a href="borrowing.html">Borrowing History</a>
    </nav>
  </header>
  <main id="bookList">
    
  </main>
  <script src="script.js"></script>
</body>
</html>

fiction

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Fiction Books</title>
  <link rel="stylesheet" href="style.css">
</head>
<body>
  <header>
    <h1>Fiction Books</h1>
    <nav>
      <a href="index.html">Home</a>
      <a href="non-fiction.html">Non-Fiction</a>
      <a href="borrowing.html">Borrowing History</a>
    </nav>
  </header>
  <main id="bookList">
   
  </main>
  <script src="script.js"></script>
</body>
</html>

stylesheet

body {
    font-family: 'Arial', sans-serif;
    margin: 0;
    padding: 0;
    background: linear-gradient(to bottom, #f4f4f9, #e8e8e4);
    color: #333;
  }
  
  header {
    text-align: center;
    background: #000; 
    color: #fff;
    padding: 20px 0;
  }
  
  header nav a {
    margin: 0 10px;
    color: #fff; 
    text-decoration: none;
    font-weight: bold;
    transition: color 0.3s;
  }
  
  header nav a:hover {
    color: #f39c12; 
  }
  
  main {
    padding: 20px;
  }
  
  #bookList, #historyList {
    display: flex;
    flex-wrap: wrap;
    gap: 20px;
  }
  
  .book-card, .history-card {
    background: white;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    width: calc(33% - 20px);
    border: 2px solid #f39c12; 
    transition: transform 0.2s, box-shadow 0.2s;
  }
  
  .book-card:hover, .history-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 10px rgba(0, 0, 0, 0.2);
  }
  
  button {
    background: #e74c3c; 
    color: #fff;
    border: none;
    padding: 10px 15px;
    cursor: pointer;
    font-size: 14px;
    font-weight: bold;
    border-radius: 5px;
    transition: background 0.3s, transform 0.2s;
  }
  
  button:hover:not(:disabled) {
    background: #c0392b; 
    transform: scale(1.05); 
  }
  
  button:disabled {
    background: #7f8c8d; 
    cursor: not-allowed;
  }
  
  #searchBox {
    width: 100%;
    padding: 10px;
    font-size: 16px;
    margin-bottom: 20px;
    border: 2px solid #f39c12; 
    border-radius: 5px;
  }
  
  #searchBox:focus {
    outline: none;
    border-color: #e74c3c; 
    box-shadow: 0 0 5px rgba(231, 76, 60, 0.5);
  }

javascript

const books = [
    { id: 1, title: "Pride and Prejudice", author: "Jane Austen", category: "Fiction" },
    { id: 2, title: "1984", author: "George Orwell", category: "Fiction" },
    { id: 3, title: "Becoming", author: "Michelle Obama", category: "Non-Fiction" },
    { id: 4, title: "Educated", author: "Tara Westover", category: "Non-Fiction" },
    { id: 5, title: "The Catcher in the Rye", author: "J.D. Salinger", category: "Fiction" },
    { id: 6, title: "The Road to Character", author: "David Brooks", category: "Non-Fiction" },
    { id: 7, title: "The Hobbit", author: "J.R.R. Tolkien", category: "Fiction" },
    { id: 8, title: "Atomic Habits", author: "James Clear", category: "Non-Fiction" },
    { id: 9, title: "To Kill a Mockingbird", author: "Harper Lee", category: "Fiction" },
    { id: 10, title: "Becoming", author: "Michelle Obama", category: "Non-Fiction" },
  ];
  
  let borrowedBooks = JSON.parse(localStorage.getItem("borrowedBooks")) || [];

  function loadBooks(category = null) {
    const bookList = document.getElementById("bookList");
    bookList.innerHTML = "";
  
    const filteredBooks = category
      ? books.filter(book => book.category === category)
      : books;
  
    filteredBooks.forEach(book => {
      const bookCard = document.createElement("div");
      bookCard.className = "book-card";
      const isBorrowed = borrowedBooks.some(b => b.id === book.id);
  
      bookCard.innerHTML = `
        <h3>${book.title}</h3>
        <p><strong>Author:</strong> ${book.author}</p>
        <p><strong>Category:</strong> ${book.category}</p>
        <button ${isBorrowed ? "disabled" : ""} onclick="borrowBook(${book.id})">
          ${isBorrowed ? "Borrowed" : "Borrow"}
        </button>
      `;
      bookList.appendChild(bookCard);
    });
  }
  

  function borrowBook(id) {
    const book = books.find(b => b.id === id);
    const borrowDate = new Date().toLocaleDateString();
    borrowedBooks.push({ ...book, borrowDate });
    localStorage.setItem("borrowedBooks", JSON.stringify(borrowedBooks));
    alert(`${book.title} has been borrowed.`);
    loadBooks();
  }
  

  function loadHistory() {
    const historyList = document.getElementById("historyList");
    historyList.innerHTML = "";
  
    borrowedBooks.forEach((record, index) => {
      const div = document.createElement("div");
      div.className = "history-card";
      div.innerHTML = `
        <h3>${record.title}</h3>
        <p><strong>Author:</strong> ${record.author}</p>
        <p><strong>Borrowed On:</strong> ${record.borrowDate}</p>
        <button onclick="returnBook(${index})">Return</button>
      `;
      historyList.appendChild(div);
    });
  }
  

  function returnBook(index) {
    const returnedBook = borrowedBooks.splice(index, 1)[0];
    localStorage.setItem("borrowedBooks", JSON.stringify(borrowedBooks));
    alert(`${returnedBook.title} has been returned.`);
    loadHistory();
  }

  document.getElementById("searchBox")?.addEventListener("input", (e) => {
    const filter = e.target.value.toLowerCase();
    const filteredBooks = books.filter(book =>
      book.title.toLowerCase().includes(filter) || 
      book.author.toLowerCase().includes(filter)
    );
    displayBooks(filteredBooks);
  });
  

  document.addEventListener("DOMContentLoaded", () => {
    if (location.pathname.includes("fiction")) loadBooks("Fiction");
    else if (location.pathname.includes("non-fiction")) loadBooks("Non-Fiction");
    else if (location.pathname.includes("borrowing")) loadHistory();
    else loadBooks();
  });
  
